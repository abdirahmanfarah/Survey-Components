{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\andro\\\\Documents\\\\git\\\\Survey-Components\\\\survey-components\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\andro\\\\Documents\\\\git\\\\Survey-Components\\\\survey-components\\\\src\\\\components\\\\Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\"; // import { Route, NavLink } from \"react-router-dom\";\n// import styled from 'styled-components';\n// const form = styled.form`\n//     background:blue;\n//     width:100px;\n// `;\n\nconst Survey = ({\n  errors,\n  touched,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        survey = _useState2[0],\n        setSurvey = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setSurvey([...survey, status]);\n    }\n  }, [status]);\n  return React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"To help you get the best sleep, we need to know a couple of things about you.\"), touched.Name && errors.Name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, errors.Name), React.createElement(Field, {\n    type: \"text\",\n    name: \"Name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), touched.Age && errors.Name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, errors.Age), React.createElement(Field, {\n    type: \"text\",\n    name: \"Age\",\n    placeholder: \"Age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), touched.Email && errors.Name && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, errors.Email), React.createElement(Field, {\n    type: \"text\",\n    name: \"Email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"textarea\",\n    type: \"text\",\n    name: \"Question1\",\n    placeholder: \"What is something you love about using this app?  \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"textarea\",\n    type: \"text\",\n    name: \"Question2\",\n    placeholder: \"What is something that can be better implemented? \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default withFormik({\n  mapPropsToValues: values => {\n    return {\n      Name: values.Name || \"\",\n      Age: values.Age || \"\",\n      Email: values.Email || \"\"\n    };\n  },\n  validationSchema: yup.object().shape({\n    Name: yup.string().required(),\n    Age: yup.string().required(),\n    Email: yup.string().required()\n  }),\n  handleSubmit: (values, {\n    setStatus\n  }) => {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(res.data);\n    }).catch(err => {\n      console.log('Error:', err);\n    });\n  }\n})(Survey);","map":{"version":3,"sources":["C:\\Users\\andro\\Documents\\git\\Survey-Components\\survey-components\\src\\components\\Form.js"],"names":["React","useState","useEffect","withFormik","Form","Field","yup","axios","Survey","errors","touched","status","survey","setSurvey","Name","Age","Email","mapPropsToValues","values","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","then","res","data","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from \"axios\";\r\n\r\n// import { Route, NavLink } from \"react-router-dom\";\r\n\r\n// import styled from 'styled-components';\r\n\r\n// const form = styled.form`\r\n//     background:blue;\r\n//     width:100px;\r\n// `;\r\n\r\n\r\nconst Survey =({errors, touched, status}) => {\r\n\r\n  const [survey, setSurvey] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(status){\r\n      setSurvey([...survey, status])\r\n    }\r\n  },[status])\r\n\r\n  return (\r\n    <div className ='form'>\r\n      <Form>\r\n      <h3>To help you get the best sleep, we need to know a couple of things about you.</h3>\r\n        {touched.Name && errors.Name && <p>{errors.Name}</p>}\r\n        <Field type=\"text\" name=\"Name\" placeholder=\"Name\" />\r\n        \r\n        {touched.Age && errors.Name && <p>{errors.Age}</p>}\r\n        <Field type=\"text\" name=\"Age\" placeholder=\"Age\" />\r\n  \r\n        {touched.Email && errors.Name && <p>{errors.Email}</p>}\r\n        <Field type=\"text\" name=\"Email\" placeholder=\"Email\" />\r\n\r\n        <Field component=\"textarea\" type=\"text\" name=\"Question1\" placeholder=\"What is something you love about using this app?  \" />\r\n\r\n        <Field component=\"textarea\" type=\"text\" name=\"Question2\" placeholder=\"What is something that can be better implemented? \" />\r\n  \r\n        <button type=\"submit\">Submit\r\n        </button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withFormik({\r\n  mapPropsToValues:(values) => {\r\n    return {\r\n      Name:values.Name || \"\",\r\n      Age: values.Age || \"\",\r\n      Email: values.Email || \"\"\r\n    }\r\n  },\r\n    validationSchema: yup.object().shape({\r\n      Name: yup.string().required(),\r\n      Age: yup.string().required(),\r\n      Email: yup.string().required()\r\n    }),\r\n    handleSubmit:(values, { setStatus}) => {\r\n       axios\r\n          .post(\"https://reqres.in/api/users\", values)\r\n            .then(res => {\r\n              setStatus(res.data)\r\n              console.log(res.data)\r\n            })\r\n            .catch((err) => {\r\n              console.log('Error:', err)\r\n            })\r\n    }\r\n\r\n  \r\n\r\n})(Survey);"]},"metadata":{},"sourceType":"module"}